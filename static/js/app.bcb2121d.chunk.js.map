{"version":3,"sources":["App.tsx"],"names":["DismissKeyboard","children","onPress","Keyboard","dismiss","App","useState","name","setName","age","setAge","key","people","setPeople","style","styles","container","header","input","placeholder","onChangeText","val","keyboardType","resolt","textR","map","item","touchableThing","console","log","prevPeople","filter","person","StyleSheet","create","marginTop","flex","backgroundColor","alignItems","justifyContent","padding","borderWidth","borderColor","margin","width","height","paddingTop","borderBottomStartRadius","borderBottomEndRadius","fontWeight","borderRadius","overflow"],"mappings":"wNAQMA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,cAAC,IAAD,CAA0BC,QAAS,kBAAMC,IAASC,WAAlD,SACGH,KAIU,SAASI,IACtB,MAAwBC,mBAAS,0BAAjC,WAAOC,EAAP,KAAaC,EAAb,KACA,EAAqBF,mBAAS,OAA9B,WAAOG,EAAP,KAAYC,EAAZ,KACA,EAA4BJ,mBAAS,CACnC,CAAEC,KAAM,QAASI,IAAK,KACtB,CAAEJ,KAAM,QAASI,IAAK,KACtB,CAAEJ,KAAM,QAASI,IAAK,KACtB,CAAEJ,KAAM,QAASI,IAAK,KACtB,CAAEJ,KAAM,QAASI,IAAK,KACtB,CAAEJ,KAAM,OAAQI,IAAK,KACrB,CAAEJ,KAAM,SAAUI,IAAK,OAPzB,WAAOC,EAAP,KAAeC,EAAf,KAiBA,OACE,cAACb,EAAD,UACE,cAAC,IAAD,UACF,eAAC,IAAD,CAAMc,MAAOC,EAAOC,UAApB,UACE,eAAC,IAAD,CAAMF,MAAOC,EAAOE,OAApB,UACE,cAAC,IAAD,0BACA,cAAC,IAAD,CAAWH,MAAOC,EAAOG,MACzBC,YAAY,sBACZC,aAAc,SAACC,GAAD,OAASb,EAAQa,MAC/B,cAAC,IAAD,yBACA,cAAC,IAAD,CAAWP,MAAOC,EAAOG,MACzBI,aAAa,aACbH,YAAY,eACZC,aAAc,SAACC,GAAD,OAASX,EAAOW,SAEhC,cAAC,IAAD,CAAMP,MAAOC,EAAOQ,OAApB,SACA,eAAC,IAAD,CAAMT,MAAOC,EAAOS,MAApB,mBAAkCjB,EAAlC,UAA+CE,OAG7CG,EAAOa,KAAI,SAAAC,GAAI,OACb,cAAC,IAAD,UACE,cAAC,IAAD,CAAkBZ,MAAOC,EAAOY,eAAgBzB,QAAS,kBA5B7CS,EA4BgEe,EAAKf,IA3BzFiB,QAAQC,IAAIlB,QACZE,GAAU,SAACiB,GACT,OAAOA,EAAWC,QAAO,SAAAC,GAAM,OAAIA,EAAOrB,KAAOA,QAHhC,IAACA,GA4BZ,SACE,cAAC,IAAD,CAAMG,MAAOC,EAAOW,KAApB,SAA2BA,EAAKnB,UAFzBmB,EAAKf,eAa1B,IAAMI,EAASkB,IAAWC,OAAO,CAC/BlB,UAAW,CACTmB,UAAU,IACVC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBtB,OAAO,CACLoB,gBAAiB,OACjBG,QAAQ,IAEVtB,MAAO,CACLuB,YAAa,EACbC,YAAa,OACbF,QAAQ,EACRG,OAAO,GACPC,MAAM,QAERrB,OAAQ,CACNY,UAAW,GACXS,MAAM,IACNC,OAAO,IACPC,WAAY,GACZT,gBAAiB,QACjBU,wBAAyB,GACzBC,sBAAuB,IAEzBxB,MAAO,CACLyB,WAAY,QAEdtB,eAAgB,CACdgB,OAAO,GACPO,aAAc,GACdT,YAAa,EACbC,YAAa,OACbL,gBAAiB,UACjBc,SAAU,a","file":"static/js/app.bcb2121d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button, ScrollView, TouchableOpacity, TextInput, TouchableWithoutFeedback, Keyboard } from 'react-native';\n\ninterface Props {\n  children: any\n}\n\nconst DismissKeyboard = ({ children }) => (\n  <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n    {children}\n    </TouchableWithoutFeedback>\n); \n\nexport default function App() {\n  const [name, setName] = useState('some dump fucking name')\n  const [age, setAge] =useState('69?');\n  const [people, setPeople] = useState([\n    { name: 'shaun', key: '1'},\n    { name: 'yoshi', key: '2'},\n    { name: 'mario', key: '3'},\n    { name: 'luigi', key: '4'},\n    { name: 'peach', key: '5'},\n    { name: 'toad', key: '6'},\n    { name: 'bowser', key: '7'}\n  ]);\n\n  const pressHandler = (key: string) => {\n    console.log(key);\n    setPeople((prevPeople) => {\n      return prevPeople.filter(person => person.key != key);\n    })\n  }\n\n  return (\n    <DismissKeyboard>\n      <ScrollView>\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text>Enter name:</Text>\n        <TextInput style={styles.input}\n        placeholder='put ur fucking name'\n        onChangeText={(val) => setName(val)}/>\n        <Text>Enter age:</Text>\n        <TextInput style={styles.input}\n        keyboardType='number-pad'\n        placeholder='u are old...'\n        onChangeText={(val) => setAge(val)}/>\n      </View>\n      <View style={styles.resolt}>\n      <Text style={styles.textR}>name: {name}, age: {age}</Text>\n      </View>\n\n      { people.map(item =>(\n          <View key={item.key}>\n            <TouchableOpacity style={styles.touchableThing} onPress={() => pressHandler(item.key)}>\n              <Text style={styles.item}>{item.name}</Text>\n            </TouchableOpacity>\n          </View>\n        )\n)}\n    </View>\n    </ScrollView>\n    </DismissKeyboard>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop:100,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header:{\n    backgroundColor: 'pink',\n    padding:20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#fff',\n    padding:8,\n    margin:10,\n    width:'auto'\n  },\n  resolt: {\n    marginTop: 10,\n    width:300,\n    height:100,\n    paddingTop: 50,\n    backgroundColor: 'beige',\n    borderBottomStartRadius: 30,\n    borderBottomEndRadius: 30\n  },\n  textR: {\n    fontWeight: 'bold'\n  },\n  touchableThing: {\n    margin:50,\n    borderRadius: 10,  \n    borderWidth: 1,\n    borderColor: '#fff',\n    backgroundColor: '#cae7c2',\n    overflow: 'hidden',\n  }\n});\n"],"sourceRoot":""}